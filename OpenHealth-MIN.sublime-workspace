{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"can",
				"cancel_order"
			],
			[
				"x_tot",
				"x_total_tax"
			],
			[
				"open",
				"open_product_selector"
			],
			[
				"x_par",
				"x_partner_vip"
			],
			[
				"prin",
				"print_ticket"
			],
			[
				"action",
				"action_confirm_nex"
			],
			[
				"ti",
				"ticket_receipt"
			],
			[
				"Sta",
				"State"
			],
			[
				"Sale",
				"Saledoc"
			],
			[
				"pa",
				"partner_id"
			],
			[
				"doc",
				"doctor_id"
			],
			[
				"or",
				"order"
			],
			[
				"write",
				"write_date"
			],
			[
				"sub",
				"sub_family"
			],
			[
				"res",
				"resap"
			],
			[
				"up",
				"update_totals"
			],
			[
				"des",
				"descriptor"
			],
			[
				"da",
				"date_end"
			],
			[
				"dat",
				"date_begin"
			],
			[
				"x_",
				"x_dni"
			],
			[
				"g",
				"groups"
			],
			[
				"par",
				"partner_id"
			],
			[
				"x",
				"x_dni"
			],
			[
				"nr",
				"nr_ses_created"
			],
			[
				"las",
				"laser_co2"
			],
			[
				"Con",
				"Controls"
			],
			[
				"con",
				"control_ids"
			],
			[
				"la",
				"laser_ipl"
			],
			[
				"doct",
				"doctor_id"
			],
			[
				"do",
				"doctor_id"
			],
			[
				"trea",
				"treatment_funcs"
			],
			[
				"C",
				"Controls"
			],
			[
				"reco",
				"reco_id"
			],
			[
				"price",
				"price_manual"
			],
			[
				"pro",
				"procedure"
			],
			[
				"name",
				"name_shorts"
			],
			[
				"na",
				"name_short"
			],
			[
				"upda",
				"update_patient"
			],
			[
				"st",
				"state"
			],
			[
				"M",
				"Maturity"
			],
			[
				"date",
				"datetime"
			],
			[
				"re",
				"reload"
			],
			[
				"proce",
				"procedure"
			],
			[
				"pri",
				"price_applied"
			],
			[
				"s",
				"state"
			],
			[
				"ser",
				"service_co2_id"
			],
			[
				"F",
				"Fields"
			],
			[
				"doco",
				"doctor_id"
			],
			[
				"cont",
				"control_date"
			],
			[
				"app",
				"app_date"
			],
			[
				"ap",
				"appointment_date"
			],
			[
				"di",
				"directors"
			],
			[
				"Edi",
				"Editable"
			],
			[
				"e",
				"editable"
			],
			[
				"P",
				"Payment"
			],
			[
				"pm",
				"pm_total"
			],
			[
				"se",
				"session_id"
			],
			[
				"te",
				"test_case_reset"
			],
			[
				"u",
				"update_dates"
			],
			[
				"Date",
				"Date"
			],
			[
				"evalu",
				"evaluation_start_date"
			],
			[
				"del",
				"delta_days"
			],
			[
				"va",
				"validate"
			],
			[
				"sta",
				"state"
			],
			[
				"avg_pro",
				"avg_procedures"
			],
			[
				"Fa",
				"Familias"
			],
			[
				"Fami",
				"Familias"
			],
			[
				"me",
				"medical"
			],
			[
				"su",
				"sub_family"
			],
			[
				"cos",
				"cosme_test"
			],
			[
				"sho",
				"short_names"
			],
			[
				"pr",
				"pricelist"
			],
			[
				"grou",
				"groups"
			],
			[
				"App",
				"Appointment"
			],
			[
				"Cos",
				"Cosmeto"
			],
			[
				"pay",
				"pay_myself"
			],
			[
				"tes",
				"test_integration"
			],
			[
				"qui",
				"qui_create"
			],
			[
				"ip",
				"ipl_create"
			],
			[
				"exc",
				"exc_create"
			],
			[
				"proc",
				"procedure_id"
			],
			[
				"ses",
				"session_ids"
			],
			[
				"star",
				"evaluation_start_date"
			],
			[
				"produ",
				"product_id"
			],
			[
				"app_da",
				"app_date_dt"
			],
			[
				"app_li",
				"app_limit_dt"
			],
			[
				"app_",
				"app_date_dt"
			],
			[
				"price_",
				"price_vip"
			],
			[
				"co2",
				"co2_create"
			],
			[
				"pre",
				"pre_scheduled_control"
			],
			[
				"S",
				"Scheduled"
			],
			[
				"Pro",
				"Procedure"
			],
			[
				"order",
				"order_ids"
			],
			[
				"create_a",
				"create_appointment_nex"
			],
			[
				"ord",
				"order_line"
			],
			[
				"Ap",
				"Apointment"
			],
			[
				"x_fi",
				"x_first_impression"
			],
			[
				"no",
				"now_date_str"
			],
			[
				"procedure_",
				"procedure_ids"
			],
			[
				"slo",
				"slot_dt"
			],
			[
				"ch",
				"chief_complaint"
			],
			[
				"D",
				"Date"
			],
			[
				"Ch",
				"Change"
			],
			[
				"a",
				"appointment"
			],
			[
				"Tr",
				"True"
			],
			[
				"tre",
				"treatment"
			],
			[
				"fi",
				"first_date"
			],
			[
				"create_r",
				"create_order_con"
			],
			[
				"oe",
				"oe_left"
			],
			[
				"Cre",
				"Create"
			],
			[
				"cre",
				"create_appointment"
			],
			[
				"pat",
				"patient_id"
			],
			[
				"A",
				"Appointment"
			],
			[
				"p",
				"pre_scheduled"
			],
			[
				"appointment_",
				"appointment_ids"
			],
			[
				"eva",
				"evaluation_start_date"
			],
			[
				"x_c",
				"x_create_procedure_automatic"
			],
			[
				"mode",
				"model"
			],
			[
				"ad",
				"advertisement"
			],
			[
				"sa",
				"sale_note"
			],
			[
				"sal",
				"sale_note"
			],
			[
				"in",
				"invoice"
			],
			[
				"cou",
				"counter_tkr"
			],
			[
				"op",
				"openhealth"
			],
			[
				"v",
				"value_static"
			],
			[
				"I",
				"Increase"
			],
			[
				"_h",
				"_h_sub_amount"
			],
			[
				"am",
				"amo_consultations"
			]
		]
	},
	"buffers":
	[
		{
			"file": "__openerp__.py",
			"settings":
			{
				"buffer_size": 14520,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/treatment.py",
			"settings":
			{
				"buffer_size": 35364,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/tst.py",
			"settings":
			{
				"buffer_size": 11259,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/lib_obj.py",
			"settings":
			{
				"buffer_size": 1394,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/patient.py",
			"settings":
			{
				"buffer_size": 19639,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/order.py",
			"settings":
			{
				"buffer_size": 29762,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/partner.py",
			"settings":
			{
				"buffer_size": 6791,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/partner.DEP.py",
			"settings":
			{
				"buffer_size": 5624,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/partners/partner.xml",
			"settings":
			{
				"buffer_size": 4306,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/partners/partner_actions.xml",
			"settings":
			{
				"buffer_size": 3758,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/partners/partner.TRASH.xml",
			"settings":
			{
				"buffer_size": 2797,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/patients/patient.xml",
			"settings":
			{
				"buffer_size": 11714,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/menus/menus_account.xml",
			"settings":
			{
				"buffer_size": 1362,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/patients/patient_actions.xml",
			"settings":
			{
				"buffer_size": 5200,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/menus/menus.xml",
			"settings":
			{
				"buffer_size": 14797,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"browser",
				"Browse Mode: Right Sidebar"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"python",
				"Build With: Python - Syntax Check"
			],
			[
				"package control:install",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 256.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gibil/cellar/github/openhealth/data/users/base_data_users_doctors.xml",
		"/Users/gibil/cellar/github/openhealth/models/creates.py",
		"/Users/gibil/cellar/github/openhealth/views/orders/order.xml",
		"/Users/gibil/cellar/github/openhealth/models/lib_obj.py",
		"/Users/gibil/cellar/github/openhealth/models/family_line.py",
		"/Users/gibil/cellar/github/openhealth/models/doctor_line.py",
		"/Users/gibil/cellar/github/openhealth/models/management.py",
		"/Users/gibil/cellar/github/openhealth/models/closing.py",
		"/Users/gibil/cellar/github/openhealth/models/order.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment.py",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient_search.xml",
		"/Users/gibil/cellar/github/openhealth/views/account/account_line.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus.xml",
		"/Users/gibil/cellar/github/openhealth/models/tst.py",
		"/Users/gibil/cellar/github/openhealth/models/mgt_line.py",
		"/Users/gibil/cellar/github/openhealth/models/sub_family_line.py",
		"/Users/gibil/cellar/github/openhealth/models/product_selector.py",
		"/Users/gibil/cellar/github/openhealth/models/card.py",
		"/Users/gibil/cellar/github/openhealth/models/appointment.py",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment.xml",
		"/Users/gibil/cellar/github/openhealth/models/payment_method_line.py",
		"/Users/gibil/cellar/github/openhealth/models/account_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/account_line.py",
		"/Users/gibil/cellar/github/openhealth/views/account/account_contasis.xml",
		"/Users/gibil/cellar/github/openhealth/models/account_contasis.py",
		"/Users/gibil/cellar/github/openhealth/views/payment_methods/payment_methods.xml",
		"/Users/gibil/cellar/github/openhealth/views/payment_methods/payment_method_line.xml",
		"/Users/gibil/cellar/github/openhealth/models/payment_method.py",
		"/Users/gibil/cellar/github/openhealth/models/partner.py",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient.xml",
		"/Users/gibil/cellar/github/openhealth/models/patient.py",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_line.xml",
		"/Users/gibil/cellar/github/openhealth/readme.txt",
		"/Users/gibil/cellar/github/openhealth/models/payment_method.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/payment_method_line.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/user.py",
		"/Users/gibil/cellar/github/openhealth/models/lib.py",
		"/Users/gibil/cellar/github/openhealth/models/account_line.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/account_contasis.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/report_sale_product.py",
		"/Users/gibil/cellar/github/openhealth/models/__init__.py",
		"/Users/gibil/cellar/github/openhealth/__init__.py",
		"/Users/gibil/cellar/github/openhealth/models/acc_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/acc_funcs.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/service_co2.py",
		"/Users/gibil/cellar/github/openhealth/views/report_sale/report_sale_product.xml",
		"/Users/gibil/cellar/github/openhealth/models/marketing.py",
		"/Users/gibil/cellar/github/openhealth/models/order_line.py",
		"/Users/gibil/cellar/github/openhealth/models/service_cosmetology.py",
		"/Users/gibil/cellar/github/openhealth/models/session_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/session_med.py",
		"/Users/gibil/cellar/github/openhealth/models/tst.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/order_report_nex.py",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_report_nex.xml",
		"/Users/gibil/cellar/github/openhealth/models/sale_report.py",
		"/Users/gibil/cellar/github/openhealth/models/jxvars.py",
		"/Users/gibil/cellar/github/openhealth/models/session_med.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/jrfuncs_dep.py",
		"/Users/gibil/cellar/github/openhealth/models/cosmetology.py",
		"/Users/gibil/cellar/github/openhealth/models/cos_classes.py",
		"/Users/gibil/cellar/github/openhealth/models/jrfuncs.py",
		"/Users/gibil/cellar/github/openhealth/models/service_co2_ui.py",
		"/Users/gibil/cellar/github/openhealth/models/service_co2.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/service_quick.py",
		"/Users/gibil/cellar/github/openhealth/models/control.py",
		"/Users/gibil/cellar/github/openhealth/models/pro_con_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/pro_ses_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/procedure.py",
		"/Users/gibil/cellar/github/openhealth/models/closing.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/closing.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/report.py",
		"/Users/gibil/cellar/github/openhealth/models/report_sale.py",
		"/Users/gibil/cellar/github/openhealth/views/management/management.xml",
		"/Users/gibil/cellar/github/openhealth/models/order.py",
		"/Users/gibil/cellar/github/openhealth/views/marketing/marketing.xml",
		"/Users/gibil/cellar/github/openhealth/views/closings/closings.xml",
		"/Users/gibil/cellar/github/openhealth/models/pat_funcs_dep.py",
		"/Users/gibil/cellar/github/openhealth/models/pat_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/partner.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/count_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/def_funcs_dep.py",
		"/Users/gibil/cellar/github/openhealth/models/def_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/recommendation.py",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session.xml",
		"/Users/gibil/cellar/github/openhealth/models/evaluation.py",
		"/Users/gibil/cellar/github/openhealth/views/controls/control.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure.xml",
		"/Users/gibil/cellar/github/openhealth/views/appointments/appointment.xml",
		"/Users/gibil/cellar/github/openhealth/models/appfuncs.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/appfuncs_dep.py",
		"/Users/gibil/cellar/github/openhealth/models/procedure_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/service.py",
		"/Users/gibil/cellar/github/openhealth/models/ord_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment_creates.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment_funcs.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment_funcs.py",
		"/Users/gibil/cellar/github/openhealth/views/appointments/appointment_actions.xml",
		"/Users/gibil/cellar/github/openhealth/models/time_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/appfuncs.py",
		"/Users/gibil/cellar/github/openhealth/views/services/service_search.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service.xml",
		"/Users/gibil/cellar/github/openhealth/models/procedure.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/views/reports/report_sale_months.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_reporting.xml",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_search.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_excilite.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_quick.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_co2.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_actions.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_filters.xml",
		"/Users/gibil/cellar/github/openhealth/views/report_sale/report_sale.xml",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment_services.xml",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment_services.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/models/pro_ses_funcs.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/data/users/base_data_users_assistants.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_config_simple_2.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_config_simple.xml",
		"/Users/gibil/cellar/github/openhealth/models/test.py",
		"/Users/gibil/cellar/github/openhealth/models/session.py",
		"/Users/gibil/cellar/github/openhealth/views/services/service_ipl.xml",
		"/Users/gibil/cellar/github/openhealth/models/control.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/ord_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/eval_vars.py",
		"/Users/gibil/cellar/github/openhealth/views/recommendations/recommendation.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_product.xml",
		"/Users/gibil/cellar/github/openhealth/data/base_data_physicians_new.xml",
		"/Users/gibil/cellar/github/openhealth/data/base_data_physicians.xml"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"property_product_pricelist",
			"x_id_code",
			"lang_get",
			"x_full_",
			"x_firs",
			"name=\"name",
			"name = fiel",
			"street2_sel",
			"stree2_sel",
			"menu",
			"patient_list_",
			"check_payment_method",
			"update_type(",
			"update_typ",
			"open_line_current",
			"open_product_selector",
			"onchange",
			"open_pro",
			"test_units",
			"update_type",
			"get_default_counter",
			"timedelta",
			"tzinfo",
			"create_procedure_wapp",
			"creates",
			"user",
			"lib",
			"ord_vars",
			"datetime",
			"tools",
			"math",
			"x_id_doc",
			"x_dni",
			"firm = fi",
			"pay_my",
			"create_order_lines_micro",
			"creates.",
			"self.x_payment_method",
			"product = ",
			"document",
			"compute",
			"document",
			"acc_funcs",
			"h_typ",
			"cuentab",
			"acc_funcs",
			"document = fi",
			"document",
			"create_order_",
			"create_order",
			"pay_myself",
			"test",
			"obj",
			"mgt_vars",
			"collection",
			"update_totals",
			"update(",
			"doctor_line",
			"mgt_line",
			"session_vars",
			"jxvars",
			"session_vars",
			"jxvars",
			"time_funcs",
			"jrfuncs",
			"jx_vars",
			"session_vars",
			"time_funcs",
			"jrfuncs",
			"Error: This should not happen !",
			"update",
			"update(",
			"update",
			"update_",
			"closing",
			"update",
			"report_sale",
			"vspace",
			"multi",
			"date",
			"this",
			"this should",
			"resap_funcs",
			"get_orders",
			"get_order",
			"resap_funcs",
			"resap",
			"treatment_fu",
			"def_funcs",
			"reset",
			"dni",
			"validate",
			"cre.",
			"check",
			"tools",
			"math",
			"num2words",
			"user.",
			"user",
			"def_funcs",
			"count_funcs",
			"dni",
			"x_partner_dni",
			"dni",
			"pay_myself",
			"validate",
			"lib.",
			"pat_funcs",
			"create_order_lines_reco",
			"create_order_lines",
			"user.",
			"tc.",
			"create_order_lines",
			"user",
			"create(",
			"create.",
			"create_procedure_go",
			"treatment_creates",
			"treatment_funcs",
			"def create_",
			"create_",
			"create",
			"create_procedure_go",
			"lib",
			"time_funcs",
			"treatment_funcs",
			"create_order_lines(",
			"treatment_funcs"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"repo",
			"update_macro",
			"session_vars",
			"management",
			"user",
			"ruc",
			"",
			"user",
			"lib",
			"cre.",
			"creates.",
			"create.",
			"create_order_lines_reco",
			"ord_funcs",
			"treatment_creates",
			"user",
			"available",
			"lib.",
			"session",
			"cosmetology",
			"medical",
			"ndyag",
			"ipl",
			"_2=fields.",
			"user.get_actual_doctor",
			"type_2",
			"_2=fields",
			"co2_power_2",
			"co2_mode_exposure_2",
			"co2_mode_emission_2",
			"_2=fields",
			"update",
			"consultation",
			"prod",
			"product",
			"quick",
			"ndyag",
			"ipl",
			"excilite",
			"quick",
			"",
			"cosmetology",
			"medical",
			"ndyag",
			"ipl",
			"excilite",
			"vip",
			"quick",
			"mkt_funcs",
			"main_legacy_menu",
			"checksum",
			"avg",
			"cosmetology",
			"medical",
			"quick",
			"ndyag",
			"cosmetology",
			"medical",
			"quick",
			"ndyag",
			"cosmetology",
			"medical",
			"quick",
			"ndyag",
			"ipl",
			"exc",
			"co2",
			"ipl",
			"exc",
			"co2",
			"ipl",
			"exc",
			"co2",
			"session_med",
			"control",
			"True",
			"medical",
			"vip",
			"ndyag",
			"ipl",
			"excilite",
			"quick",
			"service_co2",
			"consultation",
			"Johanna Lopez",
			"jlopez",
			"cosmetology",
			"med_create",
			"",
			"sep",
			"exc_create",
			"co2_create",
			"self",
			"app",
			"start",
			"next_date",
			"get_next_date",
			"detect_create_card",
			"sale_card",
			"adv",
			"san",
			"inv",
			"rec",
			"Precio",
			"qc",
			"product",
			"procedure",
			"avg",
			"Float",
			"avg",
			"amo",
			"product",
			"procedure",
			"amo",
			"amount",
			"management",
			"family",
			"meta",
			"self",
			"",
			"counter",
			"product",
			"procedure",
			"counter",
			"tickets",
			"patient",
			"",
			"doctor"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "__openerp__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14520,
						"regions":
						{
						},
						"selection":
						[
							[
								9809,
								9809
							]
						],
						"settings":
						{
							"SL.14.region_keys":
							[
							],
							"SL.17.region_keys":
							[
							],
							"SL.30.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6813.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "models/treatment.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35364,
						"regions":
						{
						},
						"selection":
						[
							[
								3760,
								3760
							]
						],
						"settings":
						{
							"SL.15.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2699.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "models/tst.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11259,
						"regions":
						{
						},
						"selection":
						[
							[
								8553,
								8553
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6694.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "models/lib_obj.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1394,
						"regions":
						{
						},
						"selection":
						[
							[
								645,
								645
							]
						],
						"settings":
						{
							"SL.16.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 383.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "models/patient.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19639,
						"regions":
						{
						},
						"selection":
						[
							[
								262,
								281
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "models/order.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29762,
						"regions":
						{
						},
						"selection":
						[
							[
								26781,
								26781
							]
						],
						"settings":
						{
							"SL.15.region_keys":
							[
							],
							"SL.17.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 1.0,
						"translation.y": 21298.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "models/partner.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6791,
						"regions":
						{
						},
						"selection":
						[
							[
								5205,
								5205
							]
						],
						"settings":
						{
							"SL.15.region_keys":
							[
							],
							"SL.17.region_keys":
							[
							],
							"SL.20.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4401.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "models/partner.DEP.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5624,
						"regions":
						{
						},
						"selection":
						[
							[
								90,
								90
							]
						],
						"settings":
						{
							"SL.34.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "views/partners/partner.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4306,
						"regions":
						{
						},
						"selection":
						[
							[
								3190,
								3190
							]
						],
						"settings":
						{
							"SL.16.region_keys":
							[
							],
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2146.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "views/partners/partner_actions.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3758,
						"regions":
						{
						},
						"selection":
						[
							[
								59,
								59
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "views/partners/partner.TRASH.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2797,
						"regions":
						{
						},
						"selection":
						[
							[
								2682,
								2682
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1863.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "views/patients/patient.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11714,
						"regions":
						{
						},
						"selection":
						[
							[
								4911,
								4911
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "views/menus/menus_account.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1362,
						"regions":
						{
						},
						"selection":
						[
							[
								917,
								917
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "views/patients/patient_actions.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5200,
						"regions":
						{
						},
						"selection":
						[
							[
								4822,
								4822
							]
						],
						"settings":
						{
							"SL.51.region_keys":
							[
							],
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2987.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "views/menus/menus.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14797,
						"regions":
						{
						},
						"selection":
						[
							[
								744,
								949
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 699.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 27.0
	},
	"output.exec":
	{
		"height": 30.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "OpenHealth-MIN.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"c",
				"~/cellar/github/openhealth/models/creates.py"
			],
			[
				"t",
				"~/cellar/github/openhealth/models/tst.py"
			],
			[
				"o",
				"~/cellar/github/openhealth/views/orders/order.xml"
			],
			[
				"p",
				"~/cellar/github/openhealth/views/payment_methods/payment_method_line.xml"
			],
			[
				"l",
				"~/cellar/github/openhealth/models/lib_obj.py"
			],
			[
				"s",
				"~/cellar/github/openhealth/views/services/service_co2.xml"
			],
			[
				"a",
				"~/cellar/github/openhealth/views/appointments/appointment.xml"
			],
			[
				"ap",
				"~/cellar/github/openhealth/models/appfuncs.py"
			],
			[
				"m",
				"~/cellar/github/openhealth/models/marketing.py"
			],
			[
				"pa",
				"~/cellar/github/openhealth/models/account_contasis.py"
			],
			[
				"",
				"~/cellar/github/openhealth/models/order.py"
			],
			[
				"h",
				"~/cellar/github/openhealth/views/histogram/histogram.xml"
			],
			[
				"e",
				"~/cellar/github/openhealth/models/evaluation.py"
			],
			[
				"r",
				"~/cellar/github/openhealth/views/report_sale/report_sale.xml"
			],
			[
				"i",
				"~/cellar/github/openhealth/security/ir.model.access.BUF.csv"
			],
			[
				"ka",
				"~/cellar/github/openhealth/views/kardex/kardex.xml"
			],
			[
				"tick",
				"~/cellar/github/openhealth/views/sale_documents/ticket_receipts.xml"
			],
			[
				"sa",
				"~/cellar/github/openhealth/models/sale_proof.py"
			],
			[
				"pro",
				"~/cellar/github/openhealth/views/products/product.xml"
			],
			[
				"d",
				"~/cellar/github/openhealth/data/prods/data_zones.xml"
			],
			[
				"z",
				"~/cellar/github/openhealth/models/zone.py"
			],
			[
				"b",
				"~/cellar/github/openhealth/views/base.xml"
			],
			[
				"sec",
				"~/cellar/github/openhealth/security/openhealth_security.xml"
			],
			[
				"_",
				"~/cellar/github/openhealth/__openerp__.py"
			],
			[
				"invoi",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/invoice.py"
			],
			[
				"pr",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/sale_proof.py"
			],
			[
				"re",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/views/sale_documents/receipts.xml"
			],
			[
				"service_ndy",
				"views/services/service_ndyag.xml"
			],
			[
				"service_ip",
				"views/services/service_ipl.xml"
			],
			[
				"service",
				"views/services/service_excilite.xml"
			],
			[
				"order",
				"views/orders/order.xml"
			],
			[
				"control",
				"views/controls/control.xml"
			],
			[
				"consult",
				"views/consultations/consultation.xml"
			],
			[
				"procedure",
				"views/procedures/procedure.xml"
			],
			[
				"ser",
				"views/services/service_co2.xml"
			],
			[
				"trea",
				"views/treatments/treatment.xml"
			],
			[
				"patient",
				"views/patients/patient.xml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/python/python.sublime-project"
			],
			[
				"\t",
				"~/Documents/Aptana Studio 3 Workspace/ccdata/ccData.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
