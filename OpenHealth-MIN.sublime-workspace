{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tc",
				"tc_arr"
			],
			[
				"invoi",
				"ticket_invoice"
			],
			[
				"ti",
				"ticket_invoice"
			],
			[
				"tes",
				"test_raw_lines"
			],
			[
				"in",
				"invoices"
			],
			[
				"re",
				"receipts"
			],
			[
				"rec",
				"receipts"
			],
			[
				"prin",
				"print_ticket_electronic"
			],
			[
				"get_ti",
				"get_ticket_raw_line"
			],
			[
				"ord",
				"ord_funcs"
			],
			[
				"va",
				"value"
			],
			[
				"lin",
				"line_3"
			],
			[
				"line",
				"line_2"
			],
			[
				"for",
				"form"
			],
			[
				"get_pati",
				"get_patient_name_line"
			],
			[
				"date",
				"date_order"
			],
			[
				"Corr",
				"Corregir"
			],
			[
				"or",
				"ord_funcs"
			],
			[
				"o",
				"other"
			],
			[
				"T",
				"Twitter"
			],
			[
				"tw",
				"twitter"
			],
			[
				"Fa",
				"Facebook"
			],
			[
				"M",
				"Many2one"
			],
			[
				"cont",
				"control_ids"
			],
			[
				"pl",
				"pl_transfer_free"
			],
			[
				"gro",
				"groups"
			],
			[
				"gr",
				"groups"
			],
			[
				"ser",
				"several_dates"
			],
			[
				"pro",
				"Procedure"
			],
			[
				"pa",
				"patient_name"
			],
			[
				"upd",
				"update_nr_ofs"
			],
			[
				"Proc",
				"Procedimientos"
			],
			[
				"Consu",
				"Consultas"
			],
			[
				"Cons",
				"Consultas"
			],
			[
				"nr",
				"nr_sales"
			],
			[
				"x_t",
				"x_treatment_count"
			],
			[
				"Con",
				"Consultation"
			],
			[
				"res",
				"res_model"
			],
			[
				"consu",
				"consultation_ids"
			],
			[
				"s",
				"state"
			],
			[
				"sale",
				"sale_id"
			],
			[
				"order",
				"order_ids"
			],
			[
				"price",
				"price_list"
			],
			[
				"P",
				"Print"
			],
			[
				"ordre",
				"order_line"
			],
			[
				"pat",
				"patients"
			],
			[
				"do",
				"doctor_line"
			],
			[
				"stre",
				"street2_sel"
			],
			[
				"x_fir",
				"x_first_contact"
			],
			[
				"qr",
				"qr_obj"
			],
			[
				"maek",
				"make_serial_number"
			],
			[
				"count",
				"counter_value"
			],
			[
				"rece",
				"receptor_ruc"
			],
			[
				"x_i",
				"check_x_id_doc"
			],
			[
				"recep",
				"receptor_id_doc_type"
			],
			[
				"ch",
				"check_and_generate"
			],
			[
				"J",
				"Junio"
			],
			[
				"V",
				"Vip"
			],
			[
				"Prod",
				"Productos"
			],
			[
				"st",
				"string"
			],
			[
				"x_cre",
				"x_credit_note_amount"
			],
			[
				"el",
				"elif"
			],
			[
				"up",
				"update"
			],
			[
				"dae",
				"date_array"
			],
			[
				"ap",
				"append"
			],
			[
				"x",
				"x_date_created"
			],
			[
				"x_credi",
				"x_credit_note_owner"
			],
			[
				"ret",
				"return"
			],
			[
				"seri",
				"serial_nr"
			],
			[
				"product",
				"product_id"
			],
			[
				"Fil",
				"Filter"
			],
			[
				"days",
				"days_inactive"
			],
			[
				"Produ",
				"Productividad"
			],
			[
				"update_cu",
				"update_day_cumulative"
			],
			[
				"update",
				"update_days"
			],
			[
				"ne",
				"next_date"
			],
			[
				"is",
				"is_today"
			],
			[
				"C",
				"Controls"
			],
			[
				"Config",
				"Configurators"
			],
			[
				"id",
				"x_id_doc_type"
			],
			[
				"con",
				"control_date"
			],
			[
				"app",
				"appointment_date"
			],
			[
				"new",
				"new_str"
			],
			[
				"doc",
				"doctor_name"
			],
			[
				"x_id",
				"x_id_doc_type"
			],
			[
				"appoi",
				"appointment_date"
			],
			[
				"du",
				"duration_total"
			],
			[
				"amou",
				"amount_total"
			],
			[
				"data",
				"data_amount"
			],
			[
				"me",
				"mean_amount"
			],
			[
				"day",
				"day_line"
			],
			[
				"Dy",
				"Days"
			],
			[
				"Prom",
				"Promedio"
			],
			[
				"per_amo_to",
				"per_amo_total"
			],
			[
				"tot",
				"total_amount_year_2018"
			],
			[
				"to",
				"total_amount_year_2019"
			],
			[
				"yea",
				"year_create"
			],
			[
				"month",
				"month_create"
			],
			[
				"own",
				"owner_arr"
			],
			[
				"mon",
				"month"
			],
			[
				"Doc",
				"Doctor"
			],
			[
				"mana",
				"management"
			],
			[
				"dat",
				"date_begin"
			],
			[
				"Ma",
				"management"
			],
			[
				"dab",
				"date_bx"
			],
			[
				"delta",
				"delta_patients"
			],
			[
				"group",
				"groups"
			],
			[
				"no",
				"now_0"
			],
			[
				"Elec",
				"Electronic"
			],
			[
				"x_",
				"x_type"
			],
			[
				"cr",
				"crn_tot"
			],
			[
				"cos",
				"clos_funcs"
			],
			[
				"de",
				"destination"
			],
			[
				"csv",
				"csv_fname"
			],
			[
				"cre",
				"credit_note"
			],
			[
				"Pro",
				"Procedimientos"
			],
			[
				"per_amo_pro",
				"per_amo_procedures"
			],
			[
				"crea",
				"create_csv"
			],
			[
				"Cre",
				"Create"
			],
			[
				"amo",
				"amo_procedures"
			],
			[
				"acc",
				"acc_lib"
			],
			[
				"ticket_invoice_c",
				"ticket_invoice_create"
			],
			[
				"ac",
				"activate_order"
			],
			[
				"can",
				"cancel_order"
			],
			[
				"corr",
				"correct_pm"
			],
			[
				"te",
				"test_actions"
			],
			[
				"an",
				"Anulaci√≥n"
			],
			[
				"tpye",
				"type_arr"
			]
		]
	},
	"buffers":
	[
		{
			"file": "med__openerp__.py",
			"settings":
			{
				"buffer_size": 11803,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/emr/evaluation.py",
			"settings":
			{
				"buffer_size": 10388,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/product/product.py",
			"settings":
			{
				"buffer_size": 3191,
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/product/prodvars.py",
			"settings":
			{
				"buffer_size": 10182,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "readme.txt",
			"settings":
			{
				"buffer_size": 21,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/product/product.TRASH.py",
			"settings":
			{
				"buffer_size": 10219,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/marketing/marketing.py",
			"settings":
			{
				"buffer_size": 5940,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/patient/patient.py",
			"settings":
			{
				"buffer_size": 32698,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/patient/patient_origin.py",
			"settings":
			{
				"buffer_size": 2622,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/patient/pat_vars.py",
			"settings":
			{
				"buffer_size": 4576,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/marketing/place_line.py",
			"settings":
			{
				"buffer_size": 1652,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "data/users/base_data_users_platform.xml",
			"settings":
			{
				"buffer_size": 5859,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/electronic/electronic_line.xml",
			"settings":
			{
				"buffer_size": 774,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/electronic/electronic_order.xml",
			"settings":
			{
				"buffer_size": 2895,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/containers/texto.xml",
			"settings":
			{
				"buffer_size": 555,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"browser",
				"Browse Mode: Right Sidebar"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"python",
				"Build With: Python - Syntax Check"
			],
			[
				"package control:install",
				"Package Control: Install Package"
			]
		],
		"width": 459.0
	},
	"console":
	{
		"height": 256.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gibil/cellar/github/openhealth/readme.md",
		"/Users/gibil/cellar/github/openhealth/models/electronic/texto.py",
		"/Users/gibil/cellar/github/openhealth/models/electronic/texto.DEP.py",
		"/Users/gibil/cellar/github/openhealth/views/management/management.xml",
		"/Users/gibil/cellar/github/openhealth/views/management/management_trees.xml",
		"/Users/gibil/cellar/github/openhealth/models/management/management.py",
		"/Users/gibil/cellar/github/openhealth/views/containers/container.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_account.xml",
		"/Users/gibil/cellar/github/openhealth/models/containers/container.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/containers/corrector.py",
		"/Users/gibil/cellar/github/openhealth/views/rsp/report_sale_product.xml",
		"/Users/gibil/cellar/github/openhealth/models/electronic/__init__.py",
		"/Users/gibil/cellar/github/openhealth/models/containers/container.py",
		"/Users/gibil/cellar/github/openhealth/models/containers/__init__.py",
		"/Users/gibil/cellar/github/openhealth/data/users/base_data_users_generics.xml",
		"/Users/gibil/cellar/github/openhealth/views/marketing/histogram.xml",
		"/Users/gibil/cellar/github/openhealth/views/marketing/marketing.xml",
		"/Users/gibil/cellar/github/openhealth/models/marketing/marketing.py",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient_tree.xml",
		"/Users/gibil/cellar/github/openhealth/models/patient/patient.py",
		"/Users/gibil/cellar/github/openhealth/data/users/base_data_users_managers.xml",
		"/Users/gibil/cellar/github/openhealth/readme.txt",
		"/Users/gibil/cellar/github/openhealth/models/patient/pat_vars.py",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient.xml",
		"/Users/gibil/cellar/github/openhealth/models/marketing/patient_line.py",
		"/Users/gibil/cellar/github/openhealth/models/patient/patient_origin.py",
		"/Users/gibil/cellar/github/openhealth/models/order/ord_vars.py",
		"/Users/gibil/cellar/github/openhealth/views/marketing/place.xml",
		"/Users/gibil/cellar/github/openhealth/models/marketing/mkt_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/marketing/lib_marketing.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/marketing/lib_marketing.py",
		"/Users/gibil/cellar/github/openhealth/views/marketing/place_actions.xml",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient_origin.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_caja.xml",
		"/Users/gibil/cellar/github/openhealth/models/__init__.py",
		"/Users/gibil/cellar/github/openhealth/models/libs/repo.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/order/report_sale_product.py",
		"/Users/gibil/cellar/github/openhealth/models/order/card.py",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_caja.DEP.xml",
		"/Users/gibil/cellar/github/openhealth/views/counters/counter.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/views/counters/counter_actions.xml",
		"/Users/gibil/cellar/github/openhealth/models/patient/pat_vars.DEP.txt",
		"/Users/gibil/cellar/github/openhealth/models/emr/evaluation.py",
		"/Users/gibil/cellar/github/openhealth/models/order/order.py",
		"/Users/gibil/cellar/github/openhealth/models/emr/treatment.py",
		"/Users/gibil/cellar/github/openhealth/models/management/management.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/libs/repo.py",
		"/Users/gibil/cellar/github/openhealth/models/django/interface.py",
		"/Users/gibil/cellar/github/openhealth/models/marketing/patient_line.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/order/ord_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/libs/count_funcs.py",
		"/Users/gibil/cellar/github/openhealth/views/marketing/media_line.xml",
		"/Users/gibil/cellar/github/openhealth/views/marketing/patient_line_actions.xml",
		"/Users/gibil/cellar/github/openhealth/views/marketing/marketing.DEP.xml",
		"/Users/gibil/cellar/github/openhealth/models/django/__init__.py",
		"/Users/gibil/cellar/github/openhealth/models/management/management.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/order/report_sale_product.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_marketing.xml",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_actions.xml",
		"/Users/gibil/cellar/github/openhealth/models/product/product_counter.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/product/product_counter.py",
		"/Users/gibil/cellar/github/openhealth/views/rsp/report_sale_actions.xml",
		"/Users/gibil/cellar/github/openhealth/views/marketing/patient_line.xml",
		"/Users/gibil/cellar/github/openhealth/views/rsp/item_counter.xml",
		"/Users/gibil/cellar/github/openhealth/models/product/product.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/product/product.py",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_rsp.xml",
		"/Users/gibil/cellar/github/openhealth/views/rsp/report_sale_actions.DEP.xml",
		"/Users/gibil/cellar/github/openhealth/models/product/product_product.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_co2.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_consultation.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_cosmetology.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_ipl.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_medical.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_ndyag.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_product.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_quick.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_vip.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_excilite.py",
		"/Users/gibil/cellar/github/openhealth/models/service/service_co2_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/marketing/medical.py",
		"/Users/gibil/cellar/github/openhealth/models/marketing/marketing_recommendation_line.py",
		"/Users/gibil/cellar/github/openhealth/models/product/__init__.py",
		"/Users/gibil/cellar/github/openhealth/models/management/management_order_line.py",
		"/Users/gibil/cellar/github/openhealth/models/management/__init__.py",
		"/Users/gibil/cellar/github/openhealth/models/product/prodvars.py",
		"/Users/gibil/cellar/github/openhealth/models/emr/__init__.py",
		"/Users/gibil/cellar/github/openhealth/views/management/management_order_line.xml",
		"/Users/gibil/cellar/github/openhealth/models/management/productivity_day.py",
		"/Users/gibil/cellar/github/openhealth/models/management/family_line.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/management/mgt_line.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/management/sub_family_line.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/management/family_line.py",
		"/Users/gibil/cellar/github/openhealth/models/management/day_line.py",
		"/Users/gibil/cellar/github/openhealth/views/management/management.DEP.xml",
		"/Users/gibil/cellar/github/openhealth/views/management/management.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/views/management/management_actions.xml",
		"/Users/gibil/cellar/github/openhealth/models/management/mgt_line.py",
		"/Users/gibil/cellar/github/openhealth/models/management/sub_family_line.py",
		"/Users/gibil/cellar/github/openhealth/models/management/management_order_line.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/management/doctor_line.py",
		"/Users/gibil/cellar/github/openhealth/models/management/mgt_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/management/line.py",
		"/Users/gibil/cellar/github/openhealth/models/marketing/marketing.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/management/day_doctor_line.py",
		"/Users/gibil/cellar/github/openhealth/models/management/doctor_daily.py",
		"/Users/gibil/cellar/github/openhealth/models/order/order_line.py",
		"/Users/gibil/cellar/github/openhealth/models/order/closing.py",
		"/Users/gibil/cellar/github/openhealth/reports/paper_format.xml",
		"/Users/gibil/cellar/github/openhealth/models/order/order_admin.py",
		"/Users/gibil/cellar/github/openhealth/models/order/tick_funcs.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/order/tick_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/order/raw_funcs.py",
		"/Users/gibil/cellar/github/openhealth/views/orders/order.xml",
		"/Users/gibil/cellar/github/openhealth/models/order/order.TRASH.py",
		"/Users/gibil/cellar/github/price_list/models/management/management_doctor_line.py",
		"/Users/gibil/cellar/github/openhealth/reports/print_ticket_receipt_electronic.xml",
		"/Users/gibil/cellar/github/openhealth/models/order/ord_funcs.DEP.py",
		"/Users/gibil/cellar/github/openhealth/reports/print_ticket_receipt_electronic.DEP.xml",
		"/Users/gibil/cellar/github/openhealth/models/order/clos_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/libs/user.py",
		"/Users/gibil/cellar/github/openhealth/views/configurators/configurator_emr.xml",
		"/Users/gibil/cellar/github/openhealth/models/configurator/configurator_emr.py",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_tree.xml",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_administrator.xml",
		"/Users/gibil/cellar/github/openhealth/models/order/exc_ord.py",
		"/Users/gibil/cellar/github/openhealth/data/users/base_data_users_account.xml"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"get_treatment",
			"tacna",
			"education",
			"rsp",
			"#",
			"electro",
			"container",
			"contain",
			"containter",
			"first",
			"zip",
			"district_line",
			"create",
			"order = fields",
			"order",
			"education",
			"many",
			"name",
			"chief",
			"counter",
			"vip",
			"configurator",
			"media_line_form_action",
			"patient_line_vip_form_action",
			"patient_line_mkt_view_tree",
			"marketing",
			"state = fields",
			"order_line",
			"management",
			"menus_caja",
			"rsp_list_action",
			"any",
			"categ",
			"ipl",
			"quick.",
			"quick",
			"ipl.",
			"cos.",
			"ipl.",
			"produc",
			"comput",
			"get_orders_filter",
			"family",
			"update_doctor",
			"per_amo_",
			"vali",
			"validate",
			"def ",
			"family_line",
			"state",
			"management_day_doctor_line_form_action",
			"management_day_line_form_action",
			"management_doctor_line_form_action",
			"doctor_line_form_action",
			"management_order_line_form_action",
			"def",
			"reset",
			"duration",
			"dateti",
			"doctor_id",
			"doctor_day",
			"day_line",
			"doctor_line",
			"day_line",
			"doctor_line",
			"validate",
			"update_",
			"update_cu",
			"Pl - Doctor - Stats",
			"update_doctor_st",
			"update_",
			"update_pat",
			"update",
			"management_",
			"configura",
			"management_",
			"management.xml",
			"management_view_expo",
			"selection",
			"state = fi",
			"state",
			"#",
			"date_corre",
			"total_amou",
			"year",
			"serial",
			"patient",
			"test_serial",
			"search",
			"jx",
			"get_next_counter_value",
			"make_serial_n",
			"serial_n",
			"test_serial",
			"get_raw",
			"get_ticket_raw",
			"get_ticket",
			"get_title",
			"print ticket",
			"ticket",
			"get_amount_total",
			"tick_funcs",
			"get_date_cor",
			"compute_date_corr",
			"get_date_corre",
			"autofill",
			"quick_sale_service",
			"br",
			"print_ticket_electronic",
			"jx",
			"print_ticket_elec",
			"format_line",
			"jx",
			"get_company_name",
			"get_credit_note",
			"get_order_lines_header",
			"print_",
			"Error",
			"get_ticket_date",
			"jx",
			"get_ticket_raw_line",
			"jx",
			"get ticket total net ",
			"get_words",
			"x_counter_value",
			"raw",
			"jx",
			"get_total_in_words"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"get_raw_line",
			"admin",
			"order",
			"origin",
			"",
			"-",
			"###",
			"",
			"procedure",
			"consultation",
			"procedure",
			"consultation",
			"2016",
			"2017",
			"2016",
			"2017",
			"",
			"self",
			"procedure",
			"consultation",
			"session",
			"procedure",
			"consultation",
			"obj",
			"session",
			"consultation",
			"procedure",
			"consultation",
			"procedure",
			"consultation",
			"procedure",
			"control",
			"admin",
			"partner",
			"control",
			"treatment",
			"procedure",
			"legacy",
			"mmattos",
			"Maritza Mattos",
			"",
			"invoice",
			"account",
			"date_corrected",
			"self",
			"cents",
			"words",
			"self",
			"tax",
			"self",
			"product",
			"receptor_",
			"",
			"user",
			"            <field name='pl_price_list'>2018</field>\n            <field name=\"sale_ok\" eval=\"True\" />\n            <field name=\"purchase_ok\" eval=\"False\" />\n        </record>\n",
			"",
			"            <field name='pl_price_list'>2018</field>\n            <field name=\"sale_ok\" eval=\"True\" />\n            <field name=\"purchase_ok\" eval=\"False\" />\n        </record>\n",
			"            <field name=\"sale_ok\" eval=\"True\" />\n            <field name=\"purchase_ok\" eval=\"False\" />\n        </record>\n",
			"\n            <field name='pl_price_list'>2018</field>\n        </record>\n",
			"            <field name='pl_price_list'>2018</field>\n        </record>\n",
			"marketing",
			"ruc",
			"phone",
			"address",
			"company",
			"directors",
			"subfamil",
			"subfamily",
			"2018",
			"<!-- jx -->",
			"('Grado ",
			"price_company",
			"price",
			"min",
			"day_doctor",
			"daily",
			"day_doctor",
			"varicose",
			"get_orders_by_state",
			"reset",
			"line.",
			"day_doctor",
			"rmendoza",
			"rosa",
			"other",
			"value_drop",
			"bonus",
			"return_item",
			"return",
			"discount_item",
			"discount",
			"",
			"dchumpitaz",
			"ssaucedo",
			"Salvador Saucedo",
			"Diana Chumpitaz",
			"dchumpitaz",
			"ssaucedo",
			"correction",
			"cancel_error",
			"cancel",
			"credit_note",
			"pull",
			"consultation",
			"configurator_emr",
			"selection=",
			"string=",
			"domain=",
			"True",
			"session",
			"self.configurator",
			"configurator",
			"ndyag",
			"ipl",
			"quick",
			"qui",
			"ndy",
			"ipl",
			"False",
			"ndyag",
			"ipl",
			"quick",
			"",
			"session",
			"emr",
			"session",
			"exc"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "med__openerp__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11803,
						"regions":
						{
						},
						"selection":
						[
							[
								252,
								252
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 13.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "models/emr/evaluation.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10388,
						"regions":
						{
						},
						"selection":
						[
							[
								1177,
								1651
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 759.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "models/product/product.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3191,
						"regions":
						{
						},
						"selection":
						[
							[
								239,
								239
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "models/product/prodvars.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10182,
						"regions":
						{
						},
						"selection":
						[
							[
								27,
								1369
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 473.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "readme.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21,
						"regions":
						{
						},
						"selection":
						[
							[
								21,
								21
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "models/product/product.TRASH.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10219,
						"regions":
						{
						},
						"selection":
						[
							[
								309,
								322
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "models/marketing/marketing.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5940,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "models/patient/patient.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32698,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "models/patient/patient_origin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2622,
						"regions":
						{
						},
						"selection":
						[
							[
								972,
								972
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 423.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "models/patient/pat_vars.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4576,
						"regions":
						{
						},
						"selection":
						[
							[
								80,
								80
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "models/marketing/place_line.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1652,
						"regions":
						{
						},
						"selection":
						[
							[
								1490,
								1490
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 257.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "data/users/base_data_users_platform.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5859,
						"regions":
						{
						},
						"selection":
						[
							[
								3879,
								3879
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1778.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "views/electronic/electronic_line.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 774,
						"regions":
						{
						},
						"selection":
						[
							[
								128,
								128
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "views/electronic/electronic_order.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2895,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "views/containers/texto.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 555,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								555
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 27.0
	},
	"output.exec":
	{
		"height": 30.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "OpenHealth-MIN.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"s",
				"~/cellar/github/openhealth/models/emr/service.py"
			],
			[
				"g",
				"~/cellar/github/openhealth/models/emr/gen_vars.py"
			],
			[
				"m",
				"~/cellar/github/openhealth/models/management/day_doctor_line.py"
			],
			[
				"c",
				"~/cellar/github/openhealth/views/containers/container.xml"
			],
			[
				"o",
				"~/cellar/github/openhealth/models/order/order.py"
			],
			[
				"e",
				"~/cellar/github/openhealth/models/emr/evaluation.py"
			],
			[
				"p",
				"~/cellar/github/openhealth/views/procedures/procedure.xml"
			],
			[
				"t",
				"~/cellar/github/openhealth/models/emr/test_treatment.py"
			],
			[
				"a",
				"~/cellar/github/openhealth/views/appointments/appointment_search.xml"
			],
			[
				"",
				"~/cellar/github/openhealth/views/management/management.xml"
			],
			[
				"l",
				"~/cellar/github/openhealth/models/lib_qr.py"
			],
			[
				"d",
				"~/cellar/github/openhealth/data/prods/odoo_data_services_consult.xml"
			],
			[
				"r",
				"~/cellar/github/openhealth/readme.txt"
			],
			[
				"i",
				"~/cellar/github/openhealth/models/importx.py"
			],
			[
				"pa",
				"~/cellar/github/openhealth/models/patient.py"
			],
			[
				"ap",
				"~/cellar/github/openhealth/models/appfuncs.py"
			],
			[
				"h",
				"~/cellar/github/openhealth/views/histogram/histogram.xml"
			],
			[
				"ka",
				"~/cellar/github/openhealth/views/kardex/kardex.xml"
			],
			[
				"tick",
				"~/cellar/github/openhealth/views/sale_documents/ticket_receipts.xml"
			],
			[
				"sa",
				"~/cellar/github/openhealth/models/sale_proof.py"
			],
			[
				"pro",
				"~/cellar/github/openhealth/views/products/product.xml"
			],
			[
				"z",
				"~/cellar/github/openhealth/models/zone.py"
			],
			[
				"b",
				"~/cellar/github/openhealth/views/base.xml"
			],
			[
				"sec",
				"~/cellar/github/openhealth/security/openhealth_security.xml"
			],
			[
				"_",
				"~/cellar/github/openhealth/__openerp__.py"
			],
			[
				"invoi",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/invoice.py"
			],
			[
				"pr",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/sale_proof.py"
			],
			[
				"re",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/views/sale_documents/receipts.xml"
			],
			[
				"service_ndy",
				"views/services/service_ndyag.xml"
			],
			[
				"service_ip",
				"views/services/service_ipl.xml"
			],
			[
				"service",
				"views/services/service_excilite.xml"
			],
			[
				"order",
				"views/orders/order.xml"
			],
			[
				"control",
				"views/controls/control.xml"
			],
			[
				"consult",
				"views/consultations/consultation.xml"
			],
			[
				"procedure",
				"views/procedures/procedure.xml"
			],
			[
				"ser",
				"views/services/service_co2.xml"
			],
			[
				"trea",
				"views/treatments/treatment.xml"
			],
			[
				"patient",
				"views/patients/patient.xml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/cellar/github/price_list/PriceList.sublime-project"
			],
			[
				"\t",
				"~/Documents/Aptana Studio 3 Workspace/ccdata/ccData.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
