{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pri",
				"pricelist_id"
			],
			[
				"da",
				"date_s"
			],
			[
				"odo",
				"odoo_dir"
			],
			[
				"to",
				"today_str"
			],
			[
				"ser",
				"serial_nr"
			],
			[
				"order",
				"order_line"
			],
			[
				"m",
				"models"
			],
			[
				"x_",
				"x_counter_value"
			],
			[
				"dat",
				"date_order"
			],
			[
				"app",
				"app_confirmed"
			],
			[
				"ap",
				"appointment"
			],
			[
				"cre",
				"create_service_co2"
			],
			[
				"create_ser",
				"create_service_ndyag"
			],
			[
				"co",
				"cosmetology"
			],
			[
				"vie",
				"view_id"
			],
			[
				"laser",
				"laser_co2"
			],
			[
				"pm",
				"pm_line_ids"
			],
			[
				"pre",
				"pre_scheduled"
			],
			[
				"pl",
				"pl_id"
			],
			[
				"produ",
				"product"
			],
			[
				"upda",
				"update_fast"
			],
			[
				"re",
				"reset"
			],
			[
				"Doctor",
				"Doctors"
			],
			[
				"res",
				"reset_macro"
			],
			[
				"fa",
				"family_line"
			],
			[
				"avg_pro",
				"avg_procedures"
			],
			[
				"amo_pro",
				"amo_procedures"
			],
			[
				"nr_pro",
				"nr_procedures"
			],
			[
				"avg_",
				"avg_consultations"
			],
			[
				"amo_co",
				"amo_consultations"
			],
			[
				"nr",
				"nr_consultations"
			],
			[
				"am",
				"amount_total"
			],
			[
				"x_t",
				"x_total_tax"
			],
			[
				"x_to",
				"_compute_x_total_net"
			],
			[
				"ope",
				"openhealth"
			],
			[
				"pro",
				"product_id"
			],
			[
				"name",
				"name_short"
			],
			[
				"cle",
				"clear_all"
			],
			[
				"x_fir",
				"x_first_contact"
			],
			[
				"x_fi",
				"x_first_contact"
			],
			[
				"x_f",
				"x_first_name"
			],
			[
				"tre",
				"treatment_ids"
			],
			[
				"patien",
				"patient_2"
			],
			[
				"_on",
				"_onchange_x_autofill"
			],
			[
				"ge",
				"generate_order_report"
			],
			[
				"un",
				"unlink"
			],
			[
				"pa",
				"patient_2"
			],
			[
				"pati",
				"patient_1"
			],
			[
				"db",
				"db_objs"
			],
			[
				"stre",
				"street2"
			],
			[
				"can",
				"cancel_order"
			],
			[
				"x_tot",
				"x_total_tax"
			],
			[
				"open",
				"open_product_selector"
			],
			[
				"x_par",
				"x_partner_vip"
			],
			[
				"prin",
				"print_ticket"
			],
			[
				"action",
				"action_confirm_nex"
			],
			[
				"ti",
				"ticket_receipt"
			],
			[
				"Sta",
				"State"
			],
			[
				"Sale",
				"Saledoc"
			],
			[
				"doc",
				"doctor_id"
			],
			[
				"or",
				"order"
			],
			[
				"write",
				"write_date"
			],
			[
				"sub",
				"sub_family"
			],
			[
				"up",
				"update_totals"
			],
			[
				"des",
				"descriptor"
			],
			[
				"g",
				"groups"
			],
			[
				"par",
				"partner_id"
			],
			[
				"x",
				"x_dni"
			],
			[
				"las",
				"laser_co2"
			],
			[
				"Con",
				"Controls"
			],
			[
				"con",
				"control_ids"
			],
			[
				"la",
				"laser_ipl"
			],
			[
				"doct",
				"doctor_id"
			],
			[
				"do",
				"doctor_id"
			],
			[
				"trea",
				"treatment_funcs"
			],
			[
				"C",
				"Controls"
			],
			[
				"reco",
				"reco_id"
			],
			[
				"price",
				"price_manual"
			],
			[
				"na",
				"name_short"
			],
			[
				"st",
				"state"
			],
			[
				"M",
				"Maturity"
			],
			[
				"date",
				"datetime"
			],
			[
				"proce",
				"procedure"
			],
			[
				"s",
				"state"
			],
			[
				"F",
				"Fields"
			],
			[
				"doco",
				"doctor_id"
			],
			[
				"cont",
				"control_date"
			],
			[
				"di",
				"directors"
			],
			[
				"Edi",
				"Editable"
			],
			[
				"e",
				"editable"
			],
			[
				"P",
				"Payment"
			],
			[
				"se",
				"session_id"
			],
			[
				"te",
				"test_case_reset"
			],
			[
				"u",
				"update_dates"
			],
			[
				"Date",
				"Date"
			],
			[
				"evalu",
				"evaluation_start_date"
			],
			[
				"del",
				"delta_days"
			],
			[
				"va",
				"validate"
			],
			[
				"sta",
				"state"
			],
			[
				"Fa",
				"Familias"
			],
			[
				"Fami",
				"Familias"
			],
			[
				"me",
				"medical"
			],
			[
				"su",
				"sub_family"
			],
			[
				"cos",
				"cosme_test"
			],
			[
				"sho",
				"short_names"
			],
			[
				"pr",
				"pricelist"
			],
			[
				"grou",
				"groups"
			],
			[
				"App",
				"Appointment"
			],
			[
				"Cos",
				"Cosmeto"
			],
			[
				"pay",
				"pay_myself"
			],
			[
				"tes",
				"test_integration"
			],
			[
				"qui",
				"qui_create"
			],
			[
				"ip",
				"ipl_create"
			],
			[
				"exc",
				"exc_create"
			],
			[
				"proc",
				"procedure_id"
			],
			[
				"ses",
				"session_ids"
			],
			[
				"star",
				"evaluation_start_date"
			],
			[
				"app_da",
				"app_date_dt"
			],
			[
				"app_li",
				"app_limit_dt"
			],
			[
				"app_",
				"app_date_dt"
			],
			[
				"price_",
				"price_vip"
			],
			[
				"co2",
				"co2_create"
			],
			[
				"S",
				"Scheduled"
			],
			[
				"Pro",
				"Procedure"
			],
			[
				"create_a",
				"create_appointment_nex"
			],
			[
				"ord",
				"order_line"
			],
			[
				"Ap",
				"Apointment"
			],
			[
				"no",
				"now_date_str"
			]
		]
	},
	"buffers":
	[
		{
			"file": "__openerp__.py",
			"settings":
			{
				"buffer_size": 14650,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/treatment.py",
			"settings":
			{
				"buffer_size": 38418,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/tst.py",
			"settings":
			{
				"buffer_size": 12122,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/order.py",
			"settings":
			{
				"buffer_size": 33642,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/treatments/treatment.xml",
			"settings":
			{
				"buffer_size": 28079,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/orders/order.xml",
			"settings":
			{
				"buffer_size": 21367,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/treatments/treatment.TRASH.xml",
			"settings":
			{
				"buffer_size": 2532,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/creates.py",
			"settings":
			{
				"buffer_size": 11537,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/recommendation.py",
			"settings":
			{
				"buffer_size": 8513,
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/recommendation.TRASH.py",
			"settings":
			{
				"buffer_size": 3003,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"browser",
				"Browse Mode: Right Sidebar"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"python",
				"Build With: Python - Syntax Check"
			],
			[
				"package control:install",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 256.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gibil/cellar/github/openhealth/models/patient.py",
		"/Users/gibil/cellar/github/openhealth/models/report_order_line.py",
		"/Users/gibil/cellar/github/openhealth/views/report_sale/report_sale_product.xml",
		"/Users/gibil/cellar/github/openhealth/models/order_line.py",
		"/Users/gibil/cellar/github/openhealth/models/report_sale_product.py",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient.xml",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment_orders.xml",
		"/Users/gibil/cellar/github/openhealth/models/treatment.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/creates.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/service_vip.py",
		"/Users/gibil/cellar/github/openhealth/data/pricelists.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_openhealth.xml",
		"/Users/gibil/cellar/github/openhealth/data/pricelist_quick.xml",
		"/Users/gibil/cellar/github/openhealth/data/deprecated/products_pricelist.BUF.xml",
		"/Users/gibil/cellar/github/openhealth/data/pricelists.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/data/prods/odoo_data_services_co2.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_management.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_account.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_marketing.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_openhealth.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_openhealth.DEP.xml",
		"/Users/gibil/cellar/github/openhealth/models/creates.TRASH.yp",
		"/Users/gibil/cellar/github/openhealth/models/counter.py",
		"/Users/gibil/cellar/github/openhealth/models/payment_method.py",
		"/Users/gibil/cellar/github/openhealth/models/app_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/recommendation.py",
		"/Users/gibil/cellar/github/openhealth/views/counters/counter.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/views/counters/counter.xml",
		"/Users/gibil/cellar/github/openhealth/models/count_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/tst.py",
		"/Users/gibil/cellar/github/openhealth/models/line.py",
		"/Users/gibil/cellar/github/openhealth/views/management/management_order_line.xml",
		"/Users/gibil/cellar/github/openhealth/views/management/management.xml",
		"/Users/gibil/cellar/github/openhealth/models/management_order_line.py",
		"/Users/gibil/cellar/github/openhealth/models/mkt_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/user.py",
		"/Users/gibil/cellar/github/openhealth/models/clos_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/lib.py",
		"/Users/gibil/cellar/github/openhealth/models/management.py",
		"/Users/gibil/cellar/github/openhealth/models/account_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/account_contasis.py",
		"/Users/gibil/cellar/github/openhealth/models/mgt_funcs.py",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_search.xml",
		"/Users/gibil/cellar/github/openhealth/views/orders/order.xml",
		"/Users/gibil/cellar/github/openhealth/security/openhealth_security.xml",
		"/Users/gibil/cellar/github/openhealth/security/openhealth_security_readers.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure.xml",
		"/Users/gibil/cellar/github/openhealth/views/appointments/appointment.xml",
		"/Users/gibil/cellar/github/openhealth/models/appointment.py",
		"/Users/gibil/cellar/github/openhealth/readme.txt",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_invoice_nex.xml",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_receipt_nex.xml",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_receipt.xml",
		"/Users/gibil/cellar/github/openhealth/models/counter.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/counter.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/serv_funcs.py",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment.xml",
		"/Users/gibil/cellar/github/openhealth/models/service_quick.py",
		"/Users/gibil/cellar/github/openhealth/models/service_ipl.py",
		"/Users/gibil/cellar/github/openhealth/models/service_excilite.py",
		"/Users/gibil/cellar/github/openhealth/models/service_ndyag.py",
		"/Users/gibil/cellar/github/openhealth/models/service_medical.py",
		"/Users/gibil/cellar/github/openhealth/models/service_cosmetology.py",
		"/Users/gibil/cellar/github/openhealth/models/reco_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/service_co2.py",
		"/Users/gibil/cellar/github/openhealth/models/service.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment.py",
		"/Users/gibil/cellar/github/openhealth/models/procedure.py",
		"/Users/gibil/cellar/github/openhealth/models/pro_con_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/eval_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/control_vars.py",
		"/Users/gibil/cellar/github/openhealth/views/controls/control.xml",
		"/Users/gibil/cellar/github/openhealth/models/control.py",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure_controls.xml",
		"/Users/gibil/cellar/github/openhealth/models/pm_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/payment_method_line.py",
		"/Users/gibil/cellar/github/openhealth/views/marketing/marketing.xml",
		"/Users/gibil/cellar/github/openhealth/models/marketing.py",
		"/Users/gibil/cellar/github/openhealth/views/payment_methods/payment_methods.xml",
		"/Users/gibil/cellar/github/openhealth/models/mgt_funcs.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/__init__.py",
		"/Users/gibil/cellar/github/openhealth/models/recommendation.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/views/recommendations/recommendation.xml",
		"/Users/gibil/cellar/github/openhealth/models/product.py",
		"/Users/gibil/cellar/github/openhealth/models/prodvars.py",
		"/Users/gibil/cellar/github/openhealth/views/recommendations/recommendation.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/models/payment_method.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_invoice_nex.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure_sessions.xml",
		"/Users/gibil/cellar/github/openhealth/models/management.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/creates.py",
		"/Users/gibil/cellar/github/openhealth/models/order.py",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus.xml",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_admin.xml",
		"/Users/gibil/cellar/github/openhealth/models/lib_rep.py",
		"/Users/gibil/cellar/github/openhealth/models/lib_obj.py",
		"/Users/gibil/cellar/github/openhealth/views/management/management.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/views/account/account_line.xml",
		"/Users/gibil/cellar/github/openhealth/views/account/account_contasis.xml",
		"/Users/gibil/cellar/github/openhealth/models/account_line.py",
		"/Users/gibil/cellar/github/openhealth/views/payment_methods/payment_method_line.xml",
		"/Users/gibil/cellar/github/openhealth/models/product_selector.py",
		"/Users/gibil/cellar/github/openhealth/models/appointment.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/ord_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/partner.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/patient.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/partner.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/patient.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/order.DEP.py",
		"/Users/gibil/cellar/github/openhealth/models/account_line_contasis.py",
		"/Users/gibil/cellar/github/openhealth/views/partners/partner.xml",
		"/Users/gibil/cellar/github/openhealth/models/media_line.py",
		"/Users/gibil/cellar/github/openhealth/models/ipl.py",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment_services.xml",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient_appointments.xml",
		"/Users/gibil/cellar/github/openhealth/models/partner.py",
		"/Users/gibil/cellar/github/openhealth/models/count_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/product_selector.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/place_line.py",
		"/Users/gibil/cellar/github/openhealth/models/patient_line.py",
		"/Users/gibil/cellar/github/openhealth/views/closings/closings.xml",
		"/Users/gibil/cellar/github/openhealth/models/closing.py",
		"/Users/gibil/cellar/github/openhealth/models/service.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/exc.py",
		"/Users/gibil/cellar/github/openhealth/models/ndyag.py",
		"/Users/gibil/cellar/github/openhealth/models/service_product.py"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"create_re",
			"vip_crea",
			"nr_",
			"x_vip_inprog",
			"create_service_vip",
			"menus",
			"pricelist",
			"pl",
			"vip",
			"pricelist_id",
			"pl_id",
			"pl",
			"vip",
			"x_vip",
			"property",
			"state = ",
			"openhealth.counter",
			"counter",
			"date",
			"michelot",
			"ctl",
			"cons",
			"manual",
			"acc_funcs",
			"mgt_funcs",
			"acc_funcs",
			"mgt_funcs",
			"acc_funcs",
			"corr",
			"corre",
			"today",
			"todays",
			"np",
			"mgt_vars",
			"value_static",
			"counter",
			"x_counter",
			"count_vars",
			"count_funcs",
			"x_done",
			"inprogre",
			"eval_vars",
			"time_funcs",
			"app_var",
			"eval_var",
			"date",
			"test(",
			"recomm",
			"self.treatment",
			"multi",
			"self.treatment",
			"serv_funcs",
			"service",
			"required",
			"pathology = fi",
			"pathology",
			"laser = ",
			"service = fields",
			"serv_funcs.product_medical(self)",
			"serv_funcs.product_m22(self)",
			"serv_funcs",
			"serv_funcs.product_m22(self)",
			"serv_funcs",
			"serv_funcs.product(self)",
			"serv_funcs.product(",
			"serv_funcs",
			"product",
			"serv_funcs",
			"mgt_funcs",
			"ses_create",
			"multi",
			"vip_c",
			"order",
			"self.balance",
			"pm_total",
			"fields",
			"state",
			"balance",
			"button",
			"state = ",
			"legacy",
			"caja",
			"prodvar",
			"mgt_funcs",
			"mgt_vars",
			"collections",
			"np",
			"default",
			"defaul",
			"update_qc",
			"update_counters",
			"update_counter",
			"multi",
			"reset",
			"multi",
			"order",
			"multi",
			"clear",
			"update_stats",
			"reset",
			"ratio_pro_con",
			"avg_co2",
			"products",
			"consultation",
			"product",
			"amount",
			"product",
			"product_id = ",
			"appointment_ids",
			"appointment_ids = ",
			"fecha",
			"fecha y",
			"state",
			"pm_vars",
			"state",
			"button",
			"compute",
			"treat",
			"open_product_selector",
			"prodvars",
			"print",
			"count_",
			"Get Name",
			"get_product",
			"_compute",
			"compute",
			"onchang",
			"comput"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"self",
			"self.get_product_medical()",
			"self.get_product_m22()",
			"self.get_product()",
			"self.get_product(",
			"cosmetology",
			"medical",
			"quick",
			"ndyag",
			"ipl",
			"exc",
			"co2",
			"procedure",
			"consultation",
			"service",
			"lib_rep",
			"repo",
			"update_macro",
			"session_vars",
			"management",
			"user",
			"ruc",
			"",
			"user",
			"lib",
			"cre.",
			"creates.",
			"create.",
			"create_order_lines_reco",
			"ord_funcs",
			"treatment_creates",
			"user",
			"available",
			"lib.",
			"session",
			"cosmetology",
			"medical",
			"ndyag",
			"ipl",
			"_2=fields.",
			"user.get_actual_doctor",
			"type_2",
			"_2=fields",
			"co2_power_2",
			"co2_mode_exposure_2",
			"co2_mode_emission_2",
			"_2=fields",
			"update",
			"consultation",
			"prod",
			"product",
			"quick",
			"ndyag",
			"ipl",
			"excilite",
			"quick",
			"",
			"cosmetology",
			"medical",
			"ndyag",
			"ipl",
			"excilite",
			"vip",
			"quick",
			"mkt_funcs",
			"main_legacy_menu",
			"checksum",
			"avg",
			"cosmetology",
			"medical",
			"quick",
			"ndyag",
			"cosmetology",
			"medical",
			"quick",
			"ndyag",
			"cosmetology",
			"medical",
			"quick",
			"ndyag",
			"ipl",
			"exc",
			"co2",
			"ipl",
			"exc",
			"co2",
			"ipl",
			"exc",
			"co2",
			"session_med",
			"control",
			"True",
			"medical",
			"vip",
			"ndyag",
			"ipl",
			"excilite",
			"quick",
			"service_co2",
			"consultation",
			"Johanna Lopez",
			"jlopez",
			"cosmetology",
			"med_create",
			"",
			"sep",
			"exc_create",
			"co2_create",
			"self",
			"app",
			"start",
			"next_date",
			"get_next_date",
			"detect_create_card",
			"sale_card",
			"adv",
			"san",
			"inv",
			"rec",
			"Precio",
			"qc",
			"product",
			"procedure",
			"avg",
			"Float",
			"avg",
			"amo",
			"product"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "__openerp__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14650,
						"regions":
						{
						},
						"selection":
						[
							[
								199,
								199
							]
						],
						"settings":
						{
							"SL.14.region_keys":
							[
							],
							"SL.17.region_keys":
							[
							],
							"SL.30.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "models/treatment.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38418,
						"regions":
						{
						},
						"selection":
						[
							[
								5559,
								5559
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3902.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "models/tst.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12122,
						"regions":
						{
						},
						"selection":
						[
							[
								1864,
								1864
							]
						],
						"settings":
						{
							"SL.31.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1581.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "models/order.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33642,
						"regions":
						{
						},
						"selection":
						[
							[
								33310,
								33310
							]
						],
						"settings":
						{
							"SL.41.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 25884.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "views/treatments/treatment.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28079,
						"regions":
						{
						},
						"selection":
						[
							[
								21684,
								21684
							]
						],
						"settings":
						{
							"SL.16.region_keys":
							[
							],
							"SL.43.region_keys":
							[
							],
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18930.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "views/orders/order.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21367,
						"regions":
						{
						},
						"selection":
						[
							[
								19773,
								19773
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18161.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "views/treatments/treatment.TRASH.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2532,
						"regions":
						{
						},
						"selection":
						[
							[
								1814,
								1814
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1665.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "models/creates.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11537,
						"regions":
						{
						},
						"selection":
						[
							[
								531,
								543
							]
						],
						"settings":
						{
							"SL.16.region_keys":
							[
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 146.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "models/recommendation.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8513,
						"regions":
						{
						},
						"selection":
						[
							[
								853,
								868
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "models/recommendation.TRASH.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3003,
						"regions":
						{
						},
						"selection":
						[
							[
								2869,
								2869
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 27.0
	},
	"output.exec":
	{
		"height": 30.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "OpenHealth-MIN.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"o",
				"~/cellar/github/openhealth/models/order.py"
			],
			[
				"c",
				"~/cellar/github/openhealth/models/creates.TRASH.py"
			],
			[
				"t",
				"~/cellar/github/openhealth/views/treatments/treatment.xml"
			],
			[
				"r",
				"~/cellar/github/openhealth/models/report_sale_product.py"
			],
			[
				"l",
				"~/cellar/github/openhealth/models/lib.py"
			],
			[
				"s",
				"~/cellar/github/openhealth/models/service_cosmetology.py"
			],
			[
				"i",
				"~/cellar/github/openhealth/models/ipl.py"
			],
			[
				"",
				"~/cellar/github/openhealth/models/lib_rep.py"
			],
			[
				"a",
				"~/cellar/github/openhealth/models/account_contasis.py"
			],
			[
				"p",
				"~/cellar/github/openhealth/views/patients/patient.xml"
			],
			[
				"ap",
				"~/cellar/github/openhealth/models/appfuncs.py"
			],
			[
				"m",
				"~/cellar/github/openhealth/models/marketing.py"
			],
			[
				"pa",
				"~/cellar/github/openhealth/models/account_contasis.py"
			],
			[
				"h",
				"~/cellar/github/openhealth/views/histogram/histogram.xml"
			],
			[
				"e",
				"~/cellar/github/openhealth/models/evaluation.py"
			],
			[
				"ka",
				"~/cellar/github/openhealth/views/kardex/kardex.xml"
			],
			[
				"tick",
				"~/cellar/github/openhealth/views/sale_documents/ticket_receipts.xml"
			],
			[
				"sa",
				"~/cellar/github/openhealth/models/sale_proof.py"
			],
			[
				"pro",
				"~/cellar/github/openhealth/views/products/product.xml"
			],
			[
				"d",
				"~/cellar/github/openhealth/data/prods/data_zones.xml"
			],
			[
				"z",
				"~/cellar/github/openhealth/models/zone.py"
			],
			[
				"b",
				"~/cellar/github/openhealth/views/base.xml"
			],
			[
				"sec",
				"~/cellar/github/openhealth/security/openhealth_security.xml"
			],
			[
				"_",
				"~/cellar/github/openhealth/__openerp__.py"
			],
			[
				"invoi",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/invoice.py"
			],
			[
				"pr",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/sale_proof.py"
			],
			[
				"re",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/views/sale_documents/receipts.xml"
			],
			[
				"service_ndy",
				"views/services/service_ndyag.xml"
			],
			[
				"service_ip",
				"views/services/service_ipl.xml"
			],
			[
				"service",
				"views/services/service_excilite.xml"
			],
			[
				"order",
				"views/orders/order.xml"
			],
			[
				"control",
				"views/controls/control.xml"
			],
			[
				"consult",
				"views/consultations/consultation.xml"
			],
			[
				"procedure",
				"views/procedures/procedure.xml"
			],
			[
				"ser",
				"views/services/service_co2.xml"
			],
			[
				"trea",
				"views/treatments/treatment.xml"
			],
			[
				"patient",
				"views/patients/patient.xml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Virtualenvs/Odoo9-min/odoo/addons/sale/SaleOrder.sublime-project"
			],
			[
				"\t",
				"~/Documents/Aptana Studio 3 Workspace/ccdata/ccData.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
