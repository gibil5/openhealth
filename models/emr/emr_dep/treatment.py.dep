# 22 aug 2D20 

# ----------------------------------------------------------- Test Report MGT -----------------------------------------
	@api.multi
	def test_report_management(self):
		"""
		Test Report Management
		"""
		print()
		print('Test Report Management - Button')
		test_treatment.test_report_management(self)
		print()
		print()
		print('SUCCESS !')

# ----------------------------------------------------------- Test Report PROD -----------------------------------------
	@api.multi
	def test_report_product(self):
		"""
		Test Report Products
		"""
		print()
		print('Test Report Product - Button')
		test_treatment.test_report_product(self)
		print()
		print()
		print('SUCCESS !')

# ----------------------------------------------------------- Test Report ACC -----------------------------------------
	@api.multi
	def test_report_account(self):
		"""
		Test Report Accounting
		"""
		print()
		print('Test Report account - Button')
		test_treatment.test_report_account(self)
		print()
		print()
		print('SUCCESS !')

# ----------------------------------------------------------- Test Report ACC -----------------------------------------
	@api.multi
	def test_report_contasis(self):
		"""
		Test Report Accounting Contasis
		"""
		print()
		print('Test Report Contasis - Button')
		test_treatment.test_report_contasis(self)
		print()
		print()
		print('SUCCESS !')



# 2 Aug 2020 

#----------------------------------------------------------- Quick Button - Used by Patient ---------
	@api.multi
	def open_line_current(self):
		"""
		# Quick access Button
		"""
		return {
				'type': 'ir.actions.act_window',
				'name': ' Edit Order Current',
				'view_type': 'form',
				'view_mode': 'form',
				'res_model': self._name,
				'res_id': self.id,
				'target': 'current',
				'flags': {
						#'form': {'action_buttons': True, 'options': {'mode': 'edit'}}
						'form': {'action_buttons': True, }
						},
				'context': {}
		}

# ----------------------------------------------------------- Funcs Dep ? -------------------------

	# Reset
	@api.multi
	def reset_procs(self):
		"""
		Reset Procedures
		"""
		self.add_procedures = False

	# Toggle
	@api.multi
	def toggle_add_procedures(self):
		"""
		Toggle add procedures
		"""
		self.add_procedures = not self.add_procedures

	# Co2
	nr_services_co2 = fields.Integer(
			string="Servicios",

			compute="_compute_nr_services_co2",
	)
	@api.multi
	def _compute_nr_services_co2(self):
		for record in self:
			#services = self.env['price_list.service_co2'].search_count([('treatment', '=', record.id),])
			services = self.env['openhealth.service_co2'].search_count([('treatment', '=', record.id),])
			record.nr_services_co2 = services



# ----------------------------------------------------------- Services ----------------------------

	# medical
	#service_medical_ids = fields.One2many(
	#   'openhealth.service_medical',
	#    'treatment',
	#   string="Servicios medical"
	#   )

# ----------------------------------------------------------- Services Old - Dep !! ----------------------------

	# Product
	#service_product_ids = fields.One2many(
	#		'openhealth.service.product',
	#		'treatment',
	#		string="Servicios Producto"
	#	)

	# Vip
	#service_vip_ids = fields.One2many(
	#		'openhealth.service.vip',
	#		'treatment',
	#		string="Servicios vip"
	#	)

	# Service
	#service_ids = fields.One2many(
	#		'openhealth.service',
	#		'treatment',
	#		string="Servicios"
	#	)

	# Quick
	#service_quick_ids = fields.One2many(
	#		'openhealth.service.quick',
	#		'treatment',
	#		string="Servicios quick"
	#		)

	# Co2
	#service_co2_ids = fields.One2many(
	#		'openhealth.service.co2',
	#		'treatment',
	#		string="Servicios Co2"
	#		)

	# Excilite
	#service_excilite_ids = fields.One2many(
	#		'openhealth.service.excilite',
	#		'treatment',
	#		string="Servicios Excilite"
	#		)

	# Ipl
	#service_ipl_ids = fields.One2many(
	#		'openhealth.service.ipl',
	#		'treatment',
	#		string="Servicios ipl"
	#		)

	# Ndyag
	#service_ndyag_ids = fields.One2many(
	#		'openhealth.service.ndyag',
	#		'treatment',
	#		string="Servicios ndyag"
	#		)

	# Medical
	#service_medical_ids = fields.One2many(
	#		'openhealth.service.medical',
	#		'treatment',
	#		string="Servicios medical"
	#		)

	# Cosmetology
	#service_cosmetology_ids = fields.One2many(
	#		'openhealth.service.cosmetology',
	#		'treatment',
	#		string="Servicios cosmeatria"
	#	)





# 1 Aug 2020 

	# product
	nr_services_product = fields.Integer(
			string="Servicios Producto",

			compute="_compute_nr_services_product",
	)
	@api.multi
	def _compute_nr_services_product(self):
		for record in self:
			services = self.env['openhealth.service.product'].search_count([('treatment', '=', record.id),])
			record.nr_services_product = services



	# vip
	nr_services_vip = fields.Integer(
			string="Servicios vip",

			compute="_compute_nr_services_vip",
	)
	@api.multi
	def _compute_nr_services_vip(self):
		for record in self:
			services = self.env['openhealth.service.vip'].search_count([('treatment', '=', record.id),])
			record.nr_services_vip = services

	# Quick
	nr_services_quick = fields.Integer(
			string="Servicios Quick",

			compute="_compute_nr_services_quick",
	)
	@api.multi
	def _compute_nr_services_quick(self):
		for record in self:
			services = self.env['openhealth.service.quick'].search_count([('treatment', '=', record.id),])
			record.nr_services_quick = services


	# excilite
	nr_services_excilite = fields.Integer(
			string="Servicios",

			compute="_compute_nr_services_excilite",
	)
	@api.multi
	def _compute_nr_services_excilite(self):
		for record in self:
			services = self.env['openhealth.service.excilite'].search_count([('treatment', '=', record.id),])
			record.nr_services_excilite = services

	# ipl
	nr_services_ipl = fields.Integer(
			string="Servicios",

			compute="_compute_nr_services_ipl",
	)
	@api.multi
	def _compute_nr_services_ipl(self):
		for record in self:
			services = self.env['openhealth.service.ipl'].search_count([('treatment', '=', record.id),])
			record.nr_services_ipl = services

	# ndyag
	nr_services_ndyag = fields.Integer(
			string="Servicios",

			compute="_compute_nr_services_ndyag",
	)
	@api.multi
	def _compute_nr_services_ndyag(self):
		for record in self:
			services = self.env['openhealth.service.ndyag'].search_count([('treatment', '=', record.id),])
			record.nr_services_ndyag = services

	# medical
	nr_services_medical = fields.Integer(
			string="Servicios",

			compute="_compute_nr_services_medical",
	)
	@api.multi
	def _compute_nr_services_medical(self):
		for record in self:
			services = self.env['openhealth.service.medical'].search_count([('treatment', '=', record.id),])
			record.nr_services_medical = services

	# Cosmetology
	nr_services_cosmetology = fields.Integer(
			string="Servicios",

			compute="_compute_nr_services_cosmetology",
	)
	@api.multi
	def _compute_nr_services_cosmetology(self):
		for record in self:
			services = self.env['openhealth.service.cosmetology'].search_count([('treatment', '=', record.id),])
			record.nr_services_cosmetology = services







# 28 jul 2020


"""
		Service Cosmetology
		Created: 				 1 Nov 2016
	    Last mod: 			28 Jul 2020
"""
"""
		Service echo
		Created: 				15 Apr 2019
		Last: 					15 Apr 2019
"""



# ----------------------------------------------------------- PL ---------------------------

# ----------------------------------------------------------- Fields - Services ------------------------










# 26 jul 2020


state = 'empty'
if record.treatment_closed:
  state = 'done'
elif record.nr_controls > 0:
  state = 'controls'
elif record.nr_sessions > 0:
  state = 'sessions'
elif record.nr_procedures > 0:
  state = 'procedure'
elif record.nr_invoices_pro > 0:
  state = 'invoice_procedure'
elif record.nr_budgets_pro > 0:
  state = 'budget_procedure'
elif record.nr_services > 0:
  state = 'service'
elif record.consultation_progress == 100:
  state = 'consultation'
elif record.nr_invoices_cons > 0:
  state = 'invoice_consultation'
elif record.nr_budgets_cons > 0:
  state = 'budget_consultation'

record.state = state




# 22 jul 2020

<!-- Manual -->
<!--
<group>
  <button
    type="object"
    name="toggle_add_procedures"
    attrs="{ 'invisible':[  ('add_procedures','!=',False),  ]}"
    string="Manual"
  />

  <button
    type="object"
    class="oe_highlight"
    name="toggle_add_procedures"
    attrs="{ 'invisible':[  ('add_procedures','==',False),  ]}"
    string="Manual"
  />

  <field name="add_procedures"    invisible="1"/>
</group>
-->


<!--
				<tree default_order='start_date desc'>
grey:state=='done';
-->
<!--
limit = 40
					<field name="flag"/>
					<field name="procedure_ids"     groups="openhealth.roots"/>
-->
<!--
					<field name="x_test"/>
					<field name="name"/>
					<field name="patient_sex"/>
					<field name="patient_age"/>
					<field name="patient_city"/>
					<field name="duration"/>
					<field name="end_date"/>
					<field name="treatment_open"/>
					<field name="id"/>
					<field name="nr_appointments"/>
					<field name="nr_consultations"  string="Consultas"  style="text-align:center;"/>
					<field name="nr_orders"/>
					<field name="nr_procedures"     string="Procedimientos" style="color:red;"/>
					<field name="nr_controls"/>
					<field name="nr_sessions"/>
					<field name="nr_evaluations"/>
					<field name="nr_services"/>
					<field name="price_total"/>
					<field name="partner_id"/>
-->



# ----------------------------------------------------------- Dummy ------------------------
	#appointment_ids = fields.Char()



<!-- Reports -->
<!--
<field name="report_management"/>
<field name="report_marketing"/>
<field name="report_account"/>
<field name="report_contasis"/>
<field name="report_product"/>
-->



