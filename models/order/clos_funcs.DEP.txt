




# ----------------------------------------------------------- Set Proof ---------------------------

def set_proof_totals(self):
	"""
	high level support for doing this and that.
	"""
	print()
	print('Set By Proof')




	# Receipt

	# Get Orders
	#x_type = 'receipt'
	#orders, count = get_orders(self, self.date, x_type)

	# Init
	#total = 0
	#for order in orders:
	#	total = total + order.amount_untaxed

	#self.rec_tot = total

	#if count != 0:
	#	self.serial_nr_first_rec = orders[0].x_serial_nr
	#	self.serial_nr_last_rec = orders[-1].x_serial_nr




	# Invoice

	# Get Orders
	x_type = 'invoice'
	orders, count = get_orders(self, self.date, x_type)

	# Init
	total = 0
	for order in orders:
		total = total + order.amount_untaxed
	self.inv_tot = total

	if count != 0:
		self.serial_nr_first_inv = orders[0].x_serial_nr
		self.serial_nr_last_inv = orders[-1].x_serial_nr





	# Ticket Receipt

	# Get Orders
	x_type = 'ticket_receipt'
	orders, count = get_orders(self, self.date, x_type)

	# Init
	total = 0
	for order in orders:
		total = total + order.amount_untaxed
	self.tkr_tot = total

	if count != 0:
		self.serial_nr_first_tkr = orders[0].x_serial_nr
		self.serial_nr_last_tkr = orders[-1].x_serial_nr




	# Ticket Invoices

	# Get Orders
	x_type = 'ticket_invoice'
	orders, count = get_orders(self, self.date, x_type)

	# Init
	total = 0
	for order in orders:
		total = total + order.amount_untaxed
	self.tki_tot = total

	if count != 0:
		self.serial_nr_first_tki = orders[0].x_serial_nr
		self.serial_nr_last_tki = orders[-1].x_serial_nr




	# Advertisement

	# Get Orders
	x_type = 'advertisement'
	orders, count = get_orders(self, self.date, x_type)

	# Init
	total = 0
	for order in orders:
		total = total + order.amount_untaxed
	self.adv_tot = total

	if count != 0:
		self.serial_nr_first_adv = orders[0].x_serial_nr
		self.serial_nr_last_adv = orders[-1].x_serial_nr


	# Sale Notes

	# Get Orders
	x_type = 'sale_note'
	orders, count = get_orders(self, self.date, x_type)

	# Init
	total = 0
	for order in orders:
		total = total + order.amount_untaxed
	self.san_tot = total

	if count != 0:
		self.serial_nr_first_san = orders[0].x_serial_nr
		self.serial_nr_last_san = orders[-1].x_serial_nr







# ----------------------------------------------------------- Funcs ------------------------------------------------------
#@api.multi
#def update_orders(self, date):
#	print 'jx'
#	print 'Get Orders'
#	orders = get_orders(self, date)
#	print orders
#	for order in orders:
#		order.update_type()
		#print order.x_type
