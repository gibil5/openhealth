


# ----------------------------------------------------------- Test Integration Reports ------------
	# Reports - Integration
	@api.multi
	def test_case_reports(self):
		"""
		Integration Test for Class Reporting capabilites (Update method).
		"""
		#print 'Test - Report'
		#print

		if self.patient.x_test:

			# Object Oriented

			# Init
			caller = self


			# Reports

			name = 'closing'
			model = 'openhealth.closing'
			descriptor = 'date'
			closing = lib_rep.Report(name, model, descriptor, caller)
			#closing = lib_rep.Report('closing',	 		'openhealth.closing', 	'date', 		self)

			name = 'resap'
			model = 'openhealth.report.sale.product'
			descriptor = 'name'
			resap = lib_rep.Report(name, model, descriptor, caller)
			#resap = lib_rep.Report('resap',	 		'openhealth.report.sale.product', 	'name', 		self)

			name = 'management'
			model = 'openhealth.management'
			descriptor = 'date_begin'
			management = lib_rep.Report(name, model, descriptor, caller)
			#management = 	lib_rep.Report('management', 	'openhealth.management', 			'date_begin', 	self)

			name = 'marketing'
			model = 'openhealth.marketing'
			descriptor = 'date_begin'
			marketing = lib_rep.Report(name, model, descriptor, caller)
			#marketing = 	lib_rep.Report('marketing', 	'openhealth.marketing', 			'date_begin', 	self)

			name = 'account.contasis'
			model = 'openhealth.account.contasis'
			descriptor = 'date_begin'
			account = lib_rep.Report(name, model, descriptor, caller)
			#account = lib_rep.Report('account.contasis', 	'openhealth.account.contasis', 		'date_begin', 	self)



			#state_of_acc = lib_rep.Report('state_of_acc', 	'openhealth.order.report.nex', 		'create_date', self)
			#doctor_line = lib_rep.Report('doctor_line', 	'openhealth.management.doctor.line', 'write_date', self)
			#family_line = lib_rep.Report('family_line', 	'openhealth.management.family.line', 'write_date', self)
			#sub_family_line = lib_rep.Report('sub_family_line', 'openhealth.management.sub_family.line', 'write_date', self)



			# All
			objs = [
						closing,
						resap,
						management,
						marketing,
						account,
				]


			# Update
			for obj in objs:
				obj.update()

			# Print
			#for obj in objs:
			#	print obj

	# test_case_reports






# ----------------------------------------------------------- Test - Computes ------------------------------------------------------

	# Computes
	def test_computes(self):
		#print
		#print 'Treatment - Computes'

		t0 = timer()

		print self.name
		print self.state
		print self.progress
		print self.vip
		print self.pricelist_id
		print self.patient_sex
		print self.patient_age
		print self.patient_city
		print self.x_vip_inprog
		print self.consultation_progress
		print self.nr_appointments
		print self.nr_consultations
		print self.nr_budgets_cons
		print self.nr_invoices_cons
		print self.nr_services
		print self.nr_services_co2
		print self.nr_services_excilite
		print self.nr_services_ipl
		print self.nr_services_ndyag
		print self.nr_services_quick
		print self.nr_services_medical
		print self.nr_services_cosmetology
		print self.nr_services_vip
		print self.nr_services_product
		print self.nr_controls
		print self.nr_sessions
		print self.nr_procedures


		t1 = timer()

		self.delta_1 = t1 - t0

		#print self.delta_1

	# test_computes
